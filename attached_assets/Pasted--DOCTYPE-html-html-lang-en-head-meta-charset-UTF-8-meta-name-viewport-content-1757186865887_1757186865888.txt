<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Member Login - Company Portal</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .login-container {
            background: white;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .logo {
            text-align: center;
            margin-bottom: 2rem;
        }

        .logo h1 {
            color: #333;
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
        }

        .logo p {
            color: #666;
            font-size: 0.9rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #333;
            font-weight: 500;
        }

        input[type="email"] {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        input[type="email"]:focus {
            outline: none;
            border-color: #667eea;
        }

        .btn {
            width: 100%;
            padding: 0.75rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .error {
            color: #e74c3c;
            font-size: 0.9rem;
            margin-top: 0.5rem;
            display: none;
        }

        .success {
            color: #27ae60;
            font-size: 0.9rem;
            margin-top: 0.5rem;
            display: none;
        }

        .domain-info {
            background: #f8f9ff;
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1.5rem;
            border-left: 4px solid #667eea;
        }

        .domain-info h3 {
            color: #333;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .domain-info p {
            color: #666;
            font-size: 0.8rem;
        }

        .verification-step {
            display: none;
            text-align: center;
            padding: 1rem;
        }

        .verification-step h3 {
            color: #333;
            margin-bottom: 1rem;
        }

        .verification-step p {
            color: #666;
            margin-bottom: 1rem;
            line-height: 1.5;
        }

        .outlook-link {
            display: inline-block;
            background: #0078d4;
            color: white;
            padding: 0.75rem 1.5rem;
            text-decoration: none;
            border-radius: 5px;
            margin-bottom: 1rem;
            transition: background 0.3s ease;
        }

        .outlook-link:hover {
            background: #106ebe;
        }

        .back-btn {
            background: #6c757d;
            margin-top: 0.5rem;
        }

        .back-btn:hover {
            background: #5a6268;
        }

        .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div id="loginForm" class="login-form">
            <div class="logo">
                <h1>Company Portal</h1>
                <p>Members Only Access</p>
            </div>

            <div class="domain-info">
                <h3>Business Email Required</h3>
                <p>Please use your company email address ending with @yourcompany.com</p>
            </div>

            <form id="emailForm">
                <div class="form-group">
                    <label for="email">Business Email Address</label>
                    <input type="email" id="email" name="email" placeholder="yourname@yourcompany.com" required>
                    <div class="error" id="emailError"></div>
                    <div class="success" id="emailSuccess"></div>
                </div>

                <button type="submit" class="btn" id="submitBtn">
                    Send Verification Email
                </button>
                <div class="spinner" id="loadingSpinner"></div>
            </form>
        </div>

        <div id="verificationStep" class="verification-step">
            <h3>Email Verification Required</h3>
            <p>We've sent a verification email to <strong id="sentEmail"></strong></p>
            <p>Please check your Outlook email and click the verification link to complete your login.</p>
            
            <a href="https://outlook.office.com/mail/" target="_blank" class="outlook-link">
                Open Outlook Web
            </a>
            
            <button class="btn" id="checkVerification">
                I've Verified My Email
            </button>
            
            <button class="btn back-btn" id="backBtn">
                Back to Login
            </button>
        </div>
    </div>

    <script>
        // Configuration - Update with your company domain
        const COMPANY_DOMAIN = 'yourcompany.com'; // Change this to your actual domain
        const ALLOWED_DOMAINS = [COMPANY_DOMAIN]; // Add multiple domains if needed

        // Simulated user database (in production, this would be on your server)
        const validUsers = new Set([
            'john.doe@yourcompany.com',
            'jane.smith@yourcompany.com',
            'admin@yourcompany.com'
        ]);

        // Store pending verifications (in production, use server-side storage)
        const pendingVerifications = new Set();
        const verifiedUsers = new Set();

        // DOM elements
        const emailForm = document.getElementById('emailForm');
        const loginForm = document.getElementById('loginForm');
        const verificationStep = document.getElementById('verificationStep');
        const emailInput = document.getElementById('email');
        const emailError = document.getElementById('emailError');
        const emailSuccess = document.getElementById('emailSuccess');
        const submitBtn = document.getElementById('submitBtn');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const sentEmail = document.getElementById('sentEmail');
        const checkVerificationBtn = document.getElementById('checkVerification');
        const backBtn = document.getElementById('backBtn');

        // Utility functions
        function showError(message) {
            emailError.textContent = message;
            emailError.style.display = 'block';
            emailSuccess.style.display = 'none';
        }

        function showSuccess(message) {
            emailSuccess.textContent = message;
            emailSuccess.style.display = 'block';
            emailError.style.display = 'none';
        }

        function hideMessages() {
            emailError.style.display = 'none';
            emailSuccess.style.display = 'none';
        }

        function isValidDomain(email) {
            const domain = email.split('@')[1];
            return ALLOWED_DOMAINS.includes(domain);
        }

        function isValidUser(email) {
            return validUsers.has(email.toLowerCase());
        }

        function setLoading(loading) {
            submitBtn.disabled = loading;
            submitBtn.style.display = loading ? 'none' : 'block';
            loadingSpinner.style.display = loading ? 'block' : 'none';
        }

        function switchToVerificationStep(email) {
            sentEmail.textContent = email;
            loginForm.style.display = 'none';
            verificationStep.style.display = 'block';
        }

        function switchToLoginStep() {
            loginForm.style.display = 'block';
            verificationStep.style.display = 'none';
            hideMessages();
        }

        // Simulate sending verification email
        function sendVerificationEmail(email) {
            return new Promise((resolve) => {
                setTimeout(() => {
                    pendingVerifications.add(email);
                    console.log(`Verification email sent to: ${email}`);
                    resolve(true);
                }, 1500);
            });
        }

        // Simulate checking verification status
        function checkVerificationStatus(email) {
            // In a real implementation, this would check your server
            // For demo purposes, we'll simulate verification after the user claims to have verified
            return verifiedUsers.has(email);
        }

        // Event handlers
        emailForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const email = emailInput.value.trim().toLowerCase();
            
            hideMessages();
            
            // Validate email format
            if (!email) {
                showError('Please enter your email address');
                return;
            }
            
            // Validate domain
            if (!isValidDomain(email)) {
                showError(`Please use your business email ending with @${COMPANY_DOMAIN}`);
                return;
            }
            
            // Check if user exists in the system
            if (!isValidUser(email)) {
                showError('Email not found. Please contact your administrator to get access.');
                return;
            }
            
            setLoading(true);
            
            try {
                await sendVerificationEmail(email);
                setLoading(false);
                switchToVerificationStep(email);
            } catch (error) {
                setLoading(false);
                showError('Failed to send verification email. Please try again.');
            }
        });

        checkVerificationBtn.addEventListener('click', function() {
            const email = sentEmail.textContent;
            
            // In a real implementation, you'd check the server for verification status
            // For demo purposes, we'll mark as verified when user clicks
            verifiedUsers.add(email);
            
            if (checkVerificationStatus(email)) {
                alert(`Welcome! You are now logged in as ${email}`);
                // Redirect to member area or dashboard
                // window.location.href = '/dashboard';
            } else {
                alert('Email verification not found. Please check your email and click the verification link.');
            }
        });

        backBtn.addEventListener('click', function() {
            switchToLoginStep();
            emailInput.value = '';
        });

        // Real-time domain validation
        emailInput.addEventListener('input', function() {
            const email = this.value.trim();
            if (email && !isValidDomain(email)) {
                showError(`Please use your business email ending with @${COMPANY_DOMAIN}`);
            } else {
                hideMessages();
            }
        });

        // Initialize
        console.log('Business Email Login System initialized');
        console.log(`Allowed domains: ${ALLOWED_DOMAINS.join(', ')}`);
        console.log('Valid users:', Array.from(validUsers));
    </script>
</body>
</html>